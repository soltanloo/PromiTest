{
  "74": {
    "rejectable": "This is a promise of type \"NewPromise\", which is not Rejected by the current test suite.\nIt's potentially Rejectable because contains a call to reject() function or a throw keyword.\nIf possible, generate a test that can cover this execution path of the promise.\nOnly include the new test code in your response; no description or anything.\nMake sure to include the imports as well. I want the test to be runnable in a separate file.\nThe current test suite uses mocha.\nThe module system used in the project is: CommonJS.\n\nLocation: index.js\nfunction foo(condition) {\n\tlet r1, r2;\n\tlet p = new Promise((resolve, reject) => {\n\t\tr1 = resolve;\n\t\tr2 = reject;\n\t})\n\n\tif (condition) r1(\"Hello World!\");\n\telse r2(\"Rejected\");\n\n\treturn p;\n}\n\nThe execution path from the test to the mentioned function is included for you to better understand the context.\nEach function is separated by ---, and the location of each one is provided.\nAlso, I have included export info about them, so that you can correctly write the imports and also possibly directly use them in the new test and avoid taking the whole execution path:\n\nLocation: test/test.js\n            \n            function (done) {\n\t\tfoo(true).then(() => {\n\t\t\tdone()\n\t\t});\n\t}\n            \n            exported: false\n            isDefaultExport: false\n            \n            ---Location: index.js\n            \n            function foo(condition) {\n\tlet r1, r2;\n\tlet p = new Promise((resolve, reject) => {\n\t\tr1 = resolve;\n\t\tr2 = reject;\n\t})\n\n\tif (condition) r1(\"Hello World!\");\n\telse r2(\"Rejected\");\n\n\treturn p;\n}\n            \n            exported: true\n            isDefaultExport: false\n            exportedAs: foo\n            ---"
  }
}